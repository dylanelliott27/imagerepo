{"version":3,"sources":["userContext.js","Nav.js","Home.js","UploadImage.js","Login.js","Register.js","MyImages.js","App.js","serviceWorker.js","index.js"],"names":["userContext","createContext","user","login","loggedIn","getUserInfo","logout","UserProvider","props","useState","userInfo","setUserInfo","setLoggedIn","useEffect","fetch","process","credentials","then","res","json","data","username","money","catch","_","console","log","Provider","value","updateUserInfo","pass","fromRegister","method","body","JSON","stringify","password","status","alert","children","Nav","useContext","mode","Item","key","icon","to","style","float","onClick","document","cookie","Home","publicImages","setPublicImages","error","span","offset","textAlign","itemLayout","size","pagination","onChange","page","pageSize","dataSource","renderItem","item","title","actions","extra","width","alt","src","path","Meta","avatar","href","ownerUsername","description","price","isOwner","type","pictureID","UploadImage","previewImages","setPreviewImages","successfulUpload","setSuccessfulUpload","filesToBeUploaded","useRef","previewImage","e","Array","from","target","files","forEach","ele","reader","readAsDataURL","addEventListener","x","name","public","result","tags","readImage","FileReader","formItemLayout","labelCol","wrapperCol","onFinish","fileList","current","formData","FormData","i","length","randomFileName","Math","floor","random","append","marginTop","label","ref","multiple","htmlType","Object","keys","map","height","event","persist","old","Login","setUsername","setPassword","justify","align","minHeight","className","initialValues","remember","rules","required","message","prefix","placeholder","valuePropName","noStyle","Register","loggedin","Option","Select","MyImages","images","setImages","modalVisibility","setModalVisibility","pictureBeingEdited","setPictureBeingEdited","picturedetails","id","objCopy","splice","visible","onOk","onCancel","defaultValue","App","exact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"+PAEaA,EAAcC,wBAAc,CACrCC,KAAM,GACNC,MAAO,aACPC,UAAU,EACVC,YAAa,aACbC,OAAQ,eAIEC,EAAe,SAACC,GAAW,IAAD,EACJC,mBAAS,IADL,mBAC7BC,EAD6B,KACnBC,EADmB,OAEJF,oBAAS,GAFL,mBAE7BL,EAF6B,KAEnBQ,EAFmB,KA+CpC,OAVEC,qBAAU,WACRC,MAAM,GAAD,OAAIC,OAAJ,aAA0C,CAAEC,YAAa,YAC3DC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACLT,EAAY,CAAEU,SAAUD,EAAKC,SAAUC,MAAOF,EAAKE,QACnDV,GAAY,MAEbW,OAAM,SAACC,GAAD,OAAOC,QAAQC,IAAI,sBAC3B,IAGL,kBAAC1B,EAAY2B,SAAb,CAAsBC,MAAO,CACzBlB,WACAN,WACAyB,eA/CJ,WACIf,MAAM,GAAD,OAAIC,OAAJ,aAA0C,CAAEC,YAAa,YAC3DC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACC,GAAD,OAASP,EAAYO,OA6C7Bf,MA3CF,SAAeD,EAAM4B,EAAMC,EAAcT,GACvC,GAAIS,EAGF,OAFAnB,GAAY,QACZD,EAAY,CAAEU,SAAUnB,EAAMoB,MAAOA,IAGvCR,MAAM,GAAD,OAAIC,OAAJ,UAAuC,CAC1CiB,OAAQ,OACRhB,YAAa,UACbiB,KAAMC,KAAKC,UAAU,CAAEd,SAAUnB,EAAMkC,SAAUN,MAEhDb,MAAK,SAACC,GACL,GAAmB,MAAfA,EAAImB,OACN,OAAOnB,EAAIC,UAGdF,MAAK,SAACG,GACLT,EAAY,CAAEU,SAAUD,EAAKC,SAAUC,MAAOF,EAAKE,QACnDV,GAAY,MAEbW,OAAM,SAACC,GAAD,OAAOc,MAAM,wBAwBtBhC,OArBF,WACEM,GAAY,GACZD,EAAY,OAqBXH,EAAM+B,W,2CCMAC,MAhEf,WAAgB,IAAD,EACgBC,qBAAWzC,GAAhCU,EADK,EACLA,SAAUJ,EADL,EACKA,OAMlB,OACE,kBAAC,IAAD,CAAMoC,KAAK,cACT,kBAAC,IAAKC,KAAN,CAAWC,IAAI,OAAOC,KAAM,kBAAC,IAAD,OAC1B,kBAAC,IAAD,CAAMC,GAAG,KAAT,UAEApC,EAASW,UACT,kBAAC,IAAKsB,KAAN,CAAWC,IAAI,QAAQC,KAAM,kBAAC,IAAD,OAC3B,kBAAC,IAAD,CAAMC,GAAG,UAAT,WAGFpC,EAASW,UACT,kBAAC,IAAKsB,KAAN,CAAWC,IAAI,WAAWC,KAAM,kBAAC,IAAD,OAC9B,kBAAC,IAAD,CAAMC,GAAG,aAAT,aAGHpC,EAASW,UACR,kBAAC,IAAKsB,KAAN,CAAWC,IAAI,SAASC,KAAM,kBAAC,IAAD,OAC5B,kBAAC,IAAD,CAAMC,GAAG,WAAT,WAGHpC,EAASW,UACR,kBAAC,IAAKsB,KAAN,CAAWC,IAAI,WAAWC,KAAM,kBAAC,IAAD,OAC9B,kBAAC,IAAD,CAAMC,GAAG,aAAT,cAGHpC,EAASW,UACR,kBAAC,IAAKsB,KAAN,CACEI,MAAO,CAAEC,MAAO,SAChBJ,IAAI,OACJC,KAAM,kBAAC,IAAD,OAELnC,EAASW,UAGbX,EAASW,UACR,kBAAC,IAAKsB,KAAN,CACEI,MAAO,CAAEC,MAAO,SAChBJ,IAAI,QACJC,KAAM,kBAAC,IAAD,OAHR,IAKInC,EAASY,OAGdZ,EAASW,UACR,kBAAC,IAAKsB,KAAN,CACEM,QAjDR,WACEC,SAASC,OAAS,wDAClB7C,KAgDMyC,MAAO,CAAEC,MAAO,SAChBJ,IAAI,SACJC,KAAM,kBAAC,IAAD,OAJR,a,iDCiCOO,MAnFf,WAAiB,IAAD,EAC0B3C,mBAAS,IADnC,mBACP4C,EADO,KACOC,EADP,OAEuBb,qBAAWzC,GAAxC6B,EAFM,EAENA,eAAgBzB,EAFV,EAEUA,SA6BxB,OA3BAS,qBAAU,WACRC,MAAM,GAAD,OAAIC,OAAJ,cAA2C,CAAEC,YAAa,YAC5DC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAAD,OAAUkC,EAAgBlC,MAC/BG,OAAM,SAACC,GAAD,OAAOC,QAAQ8B,MAAM,iCAC7B,IAsBCnD,EAIF,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKoD,KAAM,GAAIC,OAAQ,GACrB,wBAAIV,MAAO,CAAEW,UAAW,WAAxB,eACA,kBAAC,IAAD,CACEC,WAAW,WACXC,KAAK,QACLC,WAAY,CACVC,SAAU,SAACC,GACTtC,QAAQC,IAAIqC,IAEdC,SAAU,GAEZC,WAAYZ,EACZa,WAAY,SAACC,GAAD,OACV,kBAAC,IAAKxB,KAAN,CACEC,IAAKuB,EAAKC,MACVC,QAAS,GACTC,MACE,yBACEC,MAAO,IACPC,IAAI,OACJC,IAAG,UAAK1D,OAAL,mBAAyCoD,EAAKO,SAIrD,kBAAC,IAAK/B,KAAKgC,KAAX,CACEC,OAAQ,kBAAC,IAAD,CAAQH,IAAKN,EAAKS,SAC1BR,MAAO,uBAAGS,KAAMV,EAAKU,MAAOV,EAAKW,eACjCC,YAAa,IAAMZ,EAAKa,QAEzBb,EAAKc,QACJ,kBAAC,IAAD,CAAQC,KAAK,UAAb,gBAEA,kBAAC,IAAD,CACEjC,QAAS,SAACzB,GAAD,OA1DF2D,EA0DuBhB,EAAKgB,eAzDjDrE,MAAM,GAAD,OAAIC,OAAJ,gBAA6C,CAChDiB,OAAQ,OACRhB,YAAa,UACbiB,KAAMC,KAAKC,UAAU,CAAEgD,UAAWA,MAEjClE,MAAK,SAACC,GACc,MAAfA,EAAImB,QACNvB,MAAM,GAAD,OAAIC,OAAJ,cAA2C,CAAEC,YAAa,YAC5DC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACLS,IACAyB,EAAgBlC,MAEjBG,OAAM,SAACC,GAAD,OAAOC,QAAQ8B,MAAM,kCAGjChC,OAAM,SAACC,GAAD,OAAOC,QAAQ8B,MAAM,uBAjBhC,IAAuB4B,GA2DPD,KAAK,WAFP,kBApCL,kBAAC,IAAD,CAAUpC,GAAG,Y,wBCyGTsC,MA5If,WAAwB,IAAD,EACqB3E,mBAAS,IAD9B,mBACd4E,EADc,KACCC,EADD,KAEdlF,EAAYqC,qBAAWzC,GAAvBI,SAFc,EAG2BK,oBAAS,GAHpC,mBAGd8E,EAHc,KAGIC,EAHJ,KAIfC,EAAoBC,iBAAO,MAEjC,SAASC,EAAaC,GACpBC,MAAMC,KAAKF,EAAEG,OAAOC,OAAOC,SAAQ,SAACC,IAKpC,SAAmBA,EAAKC,GACtBA,EAAOC,cAAcF,GACrBC,EAAOE,iBAAiB,QAAQ,SAAUT,GACxCN,GAAiB,SAACgB,GAAD,mBAAC,eACbA,GADY,kBAEdJ,EAAIK,KAAO,CACVvB,MAAO,EACPwB,QAAQ,EACRpF,KAAMwE,EAAEG,OAAOU,OACfC,KAAM,YAZZC,CAAUT,EADK,IAAIU,eAkDvB,IAAIxG,EACF,OAAO,kBAAC,IAAD,CAAU0C,GAAG,WAEtB,IAAM+D,EAAiB,CACrBC,SAAU,CAAEtD,KAAM,GAClBuD,WAAY,CAAEvD,KAAM,KAGtB,OAAI+B,EACK,kBAAC,IAAD,CAAUzC,GAAG,cAIpB,kBAAC,IAAD,eACEyD,KAAK,kBACDM,EAFN,CAGEG,SA9CJ,SAAqBhB,GAInB,IAHA,IAAMiB,EAAWxB,EAAkByB,QAAQlB,MAEvCmB,EAAW,IAAIC,SACVC,EAAI,EAAGA,EAAIJ,EAASK,OAAQD,IAAK,CACxC,IAAIE,EAAiBC,KAAKC,MAAM,OAAAD,KAAKE,SAA0B,GAC/DP,EAASQ,OAAOJ,EAAgBN,EAASI,IACzCF,EAASQ,OACPJ,EACArF,KAAKC,UAAU,CACbkD,EAAc4B,EAASI,GAAGd,MAAMC,OAChCnB,EAAc4B,EAASI,GAAGd,MAAMvB,MAChCK,EAAc4B,EAASI,GAAGd,MAAMG,QAKtC5F,MAAM,GAAD,OAAIC,OAAJ,cAA2C,CAC9CkB,KAAMkF,EACNnF,OAAQ,OACRhB,YAAa,YAEZC,MAAK,SAACC,GACc,MAAfA,EAAImB,QACNmD,GAAoB,MAGvBjE,OAAM,SAACC,GAAD,OAAOc,MAAM,mCAsBpB,wBAAIS,MAAO,CAAEW,UAAW,SAAUkE,UAAW,SAA7C,kBAEA,kBAAC,IAAKjF,KAAN,iBAAekE,EAAf,CAA+BN,KAAK,SAASsB,MAAM,uBACjD,2BACE3C,KAAK,OACL4C,IAAKrC,EACLsC,UAAQ,EACRjE,SAAU,SAAC8B,GAAD,OAAOD,EAAaC,OAIlC,kBAAC,IAAKjD,KAAN,CAAWoE,WAAY,CAAEvD,KAAM,GAAIC,OAAQ,IACzC,kBAAC,IAAD,CAAQyB,KAAK,UAAU8C,SAAS,UAAhC,WAID3C,GACC4C,OAAOC,KAAK7C,GAAe8C,KAAI,SAACvC,GAAD,OAC7B,6BACE,yBACEhD,IAAKgD,EACL7C,MAAO,CAAEwB,MAAO,QAAS6D,OAAQ,QACjC3D,IAAKY,EAAcO,GAAGxE,OAExB,wCACA,2BACE0C,SAAU,SAACuE,GACTA,EAAMC,UACNhD,GAAiB,SAACiD,GAAD,mBAAC,eACbA,GADY,kBAEd3C,EAFc,YAAC,eAENP,EAAcO,IAFT,IAEaZ,MAAOqD,EAAMtC,OAAOnE,gBAItD,yCACA,4BACEkC,SAAU,SAACuE,GACTA,EAAMC,UACNhD,GAAiB,SAACiD,GAAD,mBAAC,eACbA,GADY,kBAEd3C,EAFc,YAAC,eAENP,EAAcO,IAFT,IAEaY,OAAQ6B,EAAMtC,OAAOnE,eAIrD,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,SAAd,UAEF,wDACA,2BACEkC,SAAU,SAACuE,GACTA,EAAMC,UACNhD,GAAiB,SAACiD,GAAD,mBAAC,eACbA,GADY,kBAEd3C,EAFc,YAAC,eAENP,EAAcO,IAFT,IAEac,KAAM2B,EAAMtC,OAAOnE,sB,qDCvDlD4G,MAtEf,WAAkB,IAAD,EACiB/H,qBADjB,mBACRY,EADQ,KACEoH,EADF,OAEiBhI,qBAFjB,mBAER2B,EAFQ,KAEEsG,EAFF,OAIajG,qBAAWzC,GAA/BG,EAJO,EAIPA,MAER,OANe,EAIAC,SAGN,kBAAC,IAAD,CAAU0C,GAAG,MAGpB,kBAAC,IAAD,CACEoC,KAAK,OACLyD,QAAQ,SACRC,MAAM,SACN7F,MAAO,CAAE8F,UAAW,UAEpB,kBAAC,IAAD,CAAKrF,KAAM,GACT,qCACA,kBAAC,IAAD,CACE+C,KAAK,eACLuC,UAAU,aACVC,cAAe,CAAEC,UAAU,GAC3BhC,SAAU,SAACxF,GAAD,OAAOrB,EAAMkB,EAAUe,KAEjC,kBAAC,IAAKO,KAAN,CACE4D,KAAK,WACL0C,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,iCAEnC,kBAAC,IAAD,CACErF,SAAU,SAAC8B,GAAD,OAAO6C,EAAY7C,EAAEG,OAAOnE,QACtCwH,OAAQ,kBAAC,IAAD,CAAcN,UAAU,wBAChCO,YAAY,cAGhB,kBAAC,IAAK1G,KAAN,CACE4D,KAAK,WACL0C,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,iCAEnC,kBAAC,IAAD,CACErF,SAAU,SAAC8B,GAAD,OAAO8C,EAAY9C,EAAEG,OAAOnE,QACtCwH,OAAQ,kBAAC,IAAD,CAAcN,UAAU,wBAChC5D,KAAK,WACLmE,YAAY,cAGhB,kBAAC,IAAK1G,KAAN,KACE,kBAAC,IAAKA,KAAN,CAAW4D,KAAK,WAAW+C,cAAc,UAAUC,SAAO,GACxD,kBAAC,IAAD,qBAGF,uBAAGT,UAAU,oBAAoBjE,KAAK,IAAtC,oBAKF,kBAAC,IAAKlC,KAAN,KACE,kBAAC,IAAD,CACEuC,KAAK,UACL8C,SAAS,SACTc,UAAU,qBAHZ,eCiCGU,MAxFf,WAAqB,IAAD,EACc/I,qBADd,mBACXY,EADW,KACDoH,EADC,OAEchI,qBAFd,mBAEX2B,EAFW,KAEDsG,EAFC,OAGcjI,qBAHd,mBAGXgJ,EAHW,KAGD7I,EAHC,OAIU6B,qBAAWzC,GAA/BG,EAJU,EAIVA,MAAOC,EAJG,EAIHA,SAoBf,OAAIqJ,GAAYrJ,EACP,kBAAC,IAAD,CAAU0C,GAAG,MAGpB,kBAAC,IAAD,CACEoC,KAAK,OACLyD,QAAQ,SACRC,MAAM,SACN7F,MAAO,CAAE8F,UAAW,UAEpB,kBAAC,IAAD,CAAKrF,KAAM,GACT,wCACA,kBAAC,IAAD,CACE+C,KAAK,eACLuC,UAAU,aACVC,cAAe,CAAEC,UAAU,GAC3BhC,SAnCR,SAAyBpB,GACvB9E,MAAM,GAAD,OAAIC,OAAJ,aAA0C,CAC7CiB,OAAQ,OACRhB,YAAa,UACbiB,KAAMC,KAAKC,UAAU,CAAEd,SAAUA,EAAUe,SAAUA,MAEpDnB,MAAK,SAACC,GAEL,GADAO,QAAQC,IAAIR,GACO,MAAfA,EAAImB,OACN,OAAOnB,EAAIC,UAGdF,MAAK,SAACG,GACLjB,EAAMiB,EAAKC,SAAU,MAAM,EAAMD,EAAKE,OACtCV,GAAY,MAEbW,OAAM,SAACC,GAAD,OAAOc,MAAM,0BAqBhB,kBAAC,IAAKK,KAAN,CACE4D,KAAK,WACL0C,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,iCAEnC,kBAAC,IAAD,CACErF,SAAU,SAAC8B,GAAD,OAAO6C,EAAY7C,EAAEG,OAAOnE,QACtCwH,OAAQ,kBAAC,IAAD,CAAcN,UAAU,wBAChCO,YAAY,cAGhB,kBAAC,IAAK1G,KAAN,CACE4D,KAAK,WACL0C,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,iCAEnC,kBAAC,IAAD,CACErF,SAAU,SAAC8B,GAAD,OAAO8C,EAAY9C,EAAEG,OAAOnE,QACtCwH,OAAQ,kBAAC,IAAD,CAAcN,UAAU,wBAChC5D,KAAK,WACLmE,YAAY,cAGhB,kBAAC,IAAK1G,KAAN,KACE,kBAAC,IAAKA,KAAN,CAAW4D,KAAK,WAAW+C,cAAc,UAAUC,SAAO,GACxD,kBAAC,IAAD,qBAGF,uBAAGT,UAAU,oBAAoBjE,KAAK,IAAtC,oBAKF,kBAAC,IAAKlC,KAAN,KACE,kBAAC,IAAD,CACEuC,KAAK,UACL8C,SAAS,SACTc,UAAU,qBAHZ,e,mCC1EJY,EAAWC,IAAXD,OAyKOE,MAxKf,WAAqB,IAAD,EACUnJ,mBAAS,IADnB,mBACXoJ,EADW,KACHC,EADG,KAEV1J,EAAaqC,qBAAWzC,GAAxBI,SAFU,EAG4BK,oBAAS,GAHrC,mBAGXsJ,EAHW,KAGMC,EAHN,OAIkCvJ,mBAAS,IAJ3C,mBAIXwJ,EAJW,KAISC,EAJT,KAiElB,OA3DArJ,qBAAU,WACRC,MAAM,GAAD,OAAIC,OAAJ,eAA4C,CAAEC,YAAa,YAC7DC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAAD,OAAU0I,EAAU1I,MACzBG,OAAM,SAACC,GAAD,OAAOc,MAAM,6CACrB,IAsDElC,EAIH,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKoD,KAAM,GAAIC,OAAQ,GACrB,wBAAIV,MAAO,CAAEW,UAAW,WAAxB,eACA,kBAAC,IAAD,CACEC,WAAW,WACXC,KAAK,QACLC,WAAY,CACVC,SAAU,SAACC,GACTtC,QAAQC,IAAIqC,IAEdC,SAAU,GAEZC,WAAY4F,EACZ3F,WAAY,SAACC,GAAD,OACV,kBAAC,IAAKxB,KAAN,CACEC,IAAKuB,EAAKC,MACVC,QAAS,GACTC,MACE,yBACEC,MAAO,IACPC,IAAI,OACJC,IAAG,UAAK1D,OAAL,mBAAyCoD,EAAKO,SAIrD,kBAAC,IAAK/B,KAAKgC,KAAX,CACEC,OAAQ,kBAAC,IAAD,CAAQH,IAAKN,EAAKS,SAC1BR,MAAO,uBAAGS,KAAMV,EAAKU,MAAOV,EAAKW,eACjCC,YAAa,IAAMZ,EAAKa,QAEzBb,EAAKqC,OACJ,qEAEA,yEAGA,kBAAC,IAAD,CACEvD,QAAS,SAACzB,GAAD,OA9CA2I,EA+CS,CACdC,GAAIjG,EAAKgB,UACTH,MAAOb,EAAKa,MACZwB,OAAQrC,EAAKqC,QAjD/B0D,EAAsBC,QACtBH,GAAmB,GAFrB,IAAyBG,GAqDTjF,KAAK,WARP,QAcA,kBAAC,IAAD,CACEjC,QAAS,SAACzB,GAAD,OAtFN4I,EAsFuBjG,EAAKgB,eArF7CrE,MAAM,GAAD,OAAIC,OAAJ,cAA2C,CAC9CiB,OAAQ,OACRhB,YAAa,UACbiB,KAAMC,KAAKC,UAAU,CAAEgD,UAAWiF,MACjCnJ,MAAK,SAACC,GACY,MAAfA,EAAImB,QACNyH,GAAU,SAACvB,GACT9G,QAAQC,IAAI6G,GAEZ,IADA,IAAM8B,EAAO,YAAOR,GACXxC,EAAI,EAAGA,EAAIgD,EAAQ/C,OAAQD,IAC9BgD,EAAQhD,GAAGlC,YAAciF,GAC3BC,EAAQC,OAAOjD,EAAG,GAGtB,OAAOgD,QAff,IAAmBD,GAuFHlF,KAAK,UAFP,cAWR,kBAAC,IAAD,CACEd,MAAM,uBACNmG,QAASR,EACTS,KAxHR,WACER,GAAmB,GACnBlJ,MAAM,GAAD,OAAIC,OAAJ,YAAyC,CAC5CiB,OAAQ,OACRhB,YAAa,UACbiB,KAAMC,KAAKC,UAAU8H,KAEpBhJ,MAAK,SAACC,GACc,MAAfA,EAAImB,QACNvB,MAAM,GAAD,OAAIC,OAAJ,eAA4C,CAC/CC,YAAa,YAEZC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAAD,OAAU0I,EAAU1I,MACzBG,OAAM,SAACC,GAAD,OAAOc,MAAM,8CAGzBf,OAAM,SAACC,GAAD,OAAOc,MAAM,2BACtB4H,EAAsB,KAuGhBO,SA/ER,WACET,GAAmB,GACnBE,EAAsB,MA+EhB,wCACA,kBAAC,IAAD,CACEpG,SAAU,SAAC8B,GAAD,OACRsE,EAAsB,2BACjBD,GADgB,IAEnBjF,MAAOY,EAAEG,OAAOnE,UAGpBA,MAAOqI,EAAmBjF,MAC1BqE,YAAY,gBAEd,yCACA,kBAAC,IAAD,CACEzG,IAAKqH,EAAmBzD,OACxBkE,aAA2C,GAA7BT,EAAmBzD,OAAc,OAAS,QACxDzD,MAAO,CAAEwB,MAAO,KAChBT,SAAU,SAAC8B,GAAD,OACRsE,EAAsB,2BACjBD,GADgB,IAEnBzD,OAAa,QAALZ,EAAc,EAAI,OAI9B,kBAAC8D,EAAD,CAAQ9H,MAAM,QAAd,QACA,kBAAC8H,EAAD,CAAQ9H,MAAM,SAAd,aA9FD,kBAAC,IAAD,CAAUkB,GAAG,YCrCT6H,MA9Bf,WAIE,OAFAlJ,QAAQC,IAAInB,GAGV,kBAAC,EAAD,KACE,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOmE,KAAK,IAAIkG,OAAK,GACnB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOlG,KAAK,WACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,UACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,aACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,aACV,kBAAC,EAAD,WCtBQmG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFlI,SAASmI,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBvK,MAAK,SAAAwK,GACJA,EAAaC,gBAEdnK,OAAM,SAAAgC,GACL9B,QAAQ8B,MAAMA,EAAM4F,c","file":"static/js/main.93446da4.chunk.js","sourcesContent":["import React, {createContext, useState, useEffect} from 'react';\r\n  \r\nexport const userContext = createContext({\r\n    user: {},\r\n    login: function () {},\r\n    loggedIn: false,\r\n    getUserInfo: function () {},\r\n    logout: function(){}\r\n  });\r\n\r\n \r\n export const UserProvider = (props) => {\r\n    const [userInfo, setUserInfo] = useState({});\r\n    const [loggedIn, setLoggedIn] = useState(false);\r\n\r\n    function updateUserInfo() {\r\n        fetch(`${process.env.REACT_APP_URL}/userinfo`, { credentials: \"include\" })\r\n          .then((res) => res.json())\r\n          .then((res) => setUserInfo(res));\r\n      }\r\n      function login(user, pass, fromRegister, money) {\r\n        if (fromRegister) {\r\n          setLoggedIn(true);\r\n          setUserInfo({ username: user, money: money });\r\n          return;\r\n        }\r\n        fetch(`${process.env.REACT_APP_URL}/login`, {\r\n          method: \"POST\",\r\n          credentials: \"include\",\r\n          body: JSON.stringify({ username: user, password: pass }),\r\n        })\r\n          .then((res) => {\r\n            if (res.status === 200) {\r\n              return res.json();\r\n            }\r\n          })\r\n          .then((data) => {\r\n            setUserInfo({ username: data.username, money: data.money });\r\n            setLoggedIn(true);\r\n          })\r\n          .catch((_) => alert(\"issue logging in\"));\r\n      }\r\n    \r\n      function logout(){\r\n        setLoggedIn(false);\r\n        setUserInfo({});\r\n      } \r\n\r\n      useEffect(() => {\r\n        fetch(`${process.env.REACT_APP_URL}/userinfo`, { credentials: \"include\" })\r\n          .then((res) => res.json())\r\n          .then((data) => {\r\n            setUserInfo({ username: data.username, money: data.money });\r\n            setLoggedIn(true);\r\n          })\r\n          .catch((_) => console.log(\"not logged in\"));\r\n      }, []);\r\n\r\n    return (\r\n    <userContext.Provider value={{\r\n        userInfo,\r\n        loggedIn,\r\n        updateUserInfo,\r\n        login,\r\n        logout\r\n    }}>\r\n        {props.children}\r\n    </userContext.Provider>\r\n    );\r\n}","import React, { useContext } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { userContext } from \"./userContext.js\";\r\nimport Menu from \"antd/es/menu\";\r\n\r\nimport MailOutlined from \"@ant-design/icons/MailOutlined\";\r\nimport AppstoreOutlined from \"@ant-design/icons/AppstoreOutlined\";\r\n\r\nfunction Nav() {\r\n  const { userInfo, logout } = useContext(userContext);\r\n\r\n  function handleLogout() {\r\n    document.cookie = \"auth=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;\";\r\n    logout();\r\n  }\r\n  return (\r\n    <Menu mode=\"horizontal\">\r\n      <Menu.Item key=\"home\" icon={<MailOutlined />}>\r\n        <Link to=\"/\">Home</Link>\r\n      </Menu.Item>\r\n      {!userInfo.username && (\r\n        <Menu.Item key=\"login\" icon={<AppstoreOutlined />}>\r\n          <Link to=\"/login\">Login</Link>\r\n        </Menu.Item>\r\n      )}\r\n      {!userInfo.username && (\r\n        <Menu.Item key=\"register\" icon={<AppstoreOutlined />}>\r\n          <Link to=\"/register\">Register</Link>\r\n        </Menu.Item>\r\n      )}\r\n      {userInfo.username && (\r\n        <Menu.Item key=\"upload\" icon={<AppstoreOutlined />}>\r\n          <Link to=\"/upload\">Upload</Link>\r\n        </Menu.Item>\r\n      )}\r\n      {userInfo.username && (\r\n        <Menu.Item key=\"myImages\" icon={<AppstoreOutlined />}>\r\n          <Link to=\"/myimages\">My Images</Link>\r\n        </Menu.Item>\r\n      )}\r\n      {userInfo.username && (\r\n        <Menu.Item\r\n          style={{ float: \"right\" }}\r\n          key=\"user\"\r\n          icon={<AppstoreOutlined />}\r\n        >\r\n          {userInfo.username}\r\n        </Menu.Item>\r\n      )}\r\n      {userInfo.username && (\r\n        <Menu.Item\r\n          style={{ float: \"right\" }}\r\n          key=\"money\"\r\n          icon={<AppstoreOutlined />}\r\n        >\r\n          ${userInfo.money}\r\n        </Menu.Item>\r\n      )}\r\n      {userInfo.username && (\r\n        <Menu.Item\r\n          onClick={handleLogout}\r\n          style={{ float: \"right\" }}\r\n          key=\"logout\"\r\n          icon={<AppstoreOutlined />}\r\n        >\r\n          Log out\r\n        </Menu.Item>\r\n      )}\r\n    </Menu>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport {Redirect} from 'react-router-dom';\r\nimport List from \"antd/es/list\";\r\nimport Avatar from \"antd/es/avatar\";\r\nimport Button from \"antd/es/button\";\r\nimport Row from \"antd/es/row\"\r\nimport Col from \"antd/es/col\";\r\nimport { userContext } from \"./userContext\";\r\n\r\nfunction Home() {\r\n  const [publicImages, setPublicImages] = useState([]);\r\n  const { updateUserInfo, loggedIn } = useContext(userContext);\r\n\r\n  useEffect(() => {\r\n    fetch(`${process.env.REACT_APP_URL}/imagelist`, { credentials: \"include\" })\r\n      .then((res) => res.json())\r\n      .then((data) => setPublicImages(data))\r\n      .catch((_) => console.error(\"issue fetching imagedata\"));\r\n  }, []);\r\n\r\n  function purchaseImage(pictureID) {\r\n    fetch(`${process.env.REACT_APP_URL}/purchasereq`, {\r\n      method: \"POST\",\r\n      credentials: \"include\",\r\n      body: JSON.stringify({ pictureID: pictureID }),\r\n    })\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          fetch(`${process.env.REACT_APP_URL}/imagelist`, { credentials: \"include\" })\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n              updateUserInfo();\r\n              setPublicImages(data);\r\n            })\r\n            .catch((_) => console.error(\"issue fetching imagedata\"));\r\n        } \r\n      })\r\n      .catch((_) => console.error(\"issue purchasing\"));\r\n  }\r\n\r\n  if(!loggedIn){\r\n    return <Redirect to='/login'></Redirect>\r\n  }\r\n  return (\r\n    <Row>\r\n      <Col span={22} offset={1}>\r\n        <h1 style={{ textAlign: \"center\" }}>Marketplace</h1>\r\n        <List\r\n          itemLayout=\"vertical\"\r\n          size=\"large\"\r\n          pagination={{\r\n            onChange: (page) => {\r\n              console.log(page);\r\n            },\r\n            pageSize: 5,\r\n          }}\r\n          dataSource={publicImages}\r\n          renderItem={(item) => (\r\n            <List.Item\r\n              key={item.title}\r\n              actions={[]}\r\n              extra={\r\n                <img\r\n                  width={272}\r\n                  alt=\"logo\"\r\n                  src={`${process.env.REACT_APP_URL}/images/${item.path}`}\r\n                />\r\n              }\r\n            >\r\n              <List.Item.Meta\r\n                avatar={<Avatar src={item.avatar} />}\r\n                title={<a href={item.href}>{item.ownerUsername}</a>}\r\n                description={\"$\" + item.price}\r\n              />\r\n              {item.isOwner ? (\r\n                <Button type=\"danger\">You own this</Button>\r\n              ) : (\r\n                <Button\r\n                  onClick={(_) => purchaseImage(item.pictureID)}\r\n                  type=\"primary\"\r\n                >\r\n                  Purchase\r\n                </Button>\r\n              )}\r\n            </List.Item>\r\n          )}\r\n        />\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React, { useState, useRef, useContext} from \"react\";\r\nimport Form from \"antd/es/form\";\r\nimport Button from \"antd/es/button\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport {userContext} from './userContext';\r\n\r\nfunction UploadImage() {\r\n  const [previewImages, setPreviewImages] = useState({});\r\n  const {loggedIn} = useContext(userContext);\r\n  const [successfulUpload, setSuccessfulUpload] = useState(false);\r\n  const filesToBeUploaded = useRef(null);\r\n\r\n  function previewImage(e) {\r\n    Array.from(e.target.files).forEach((ele) => {\r\n      const reader = new FileReader();\r\n      readImage(ele, reader);\r\n    });\r\n\r\n    function readImage(ele, reader) {\r\n      reader.readAsDataURL(ele);\r\n      reader.addEventListener(\"load\", function (e) {\r\n        setPreviewImages((x) => ({\r\n          ...x,\r\n          [ele.name]: {\r\n            price: 0,\r\n            public: true,\r\n            data: e.target.result,\r\n            tags: \"\",\r\n          },\r\n        }));\r\n      });\r\n    }\r\n  }\r\n\r\n  function uploadFiles(files) {\r\n    const fileList = filesToBeUploaded.current.files;\r\n\r\n    let formData = new FormData();\r\n    for (let i = 0; i < fileList.length; i++) {\r\n      let randomFileName = Math.floor(Math.random() * (125000 - 1) + 1);\r\n      formData.append(randomFileName, fileList[i]);\r\n      formData.append(\r\n        randomFileName,\r\n        JSON.stringify([\r\n          previewImages[fileList[i].name].public,\r\n          previewImages[fileList[i].name].price,\r\n          previewImages[fileList[i].name].tags,\r\n        ])\r\n      );\r\n    }\r\n\r\n    fetch(`${process.env.REACT_APP_URL}/uploadimg`, {\r\n      body: formData,\r\n      method: \"POST\",\r\n      credentials: \"include\",\r\n    })\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          setSuccessfulUpload(true);\r\n        }\r\n      })\r\n      .catch((_) => alert(\"issue uploading the image\"));\r\n  }\r\n\r\n  if(!loggedIn){\r\n    return <Redirect to=\"/login\"></Redirect>\r\n  }\r\n  const formItemLayout = {\r\n    labelCol: { span: 6 },\r\n    wrapperCol: { span: 14 },\r\n  };\r\n\r\n  if (successfulUpload) {\r\n    return <Redirect to=\"/myimages\"></Redirect>;\r\n  }\r\n\r\n  return (\r\n    <Form\r\n      name=\"validate_other\"\r\n      {...formItemLayout}\r\n      onFinish={uploadFiles}\r\n\r\n    >\r\n      <h1 style={{ textAlign: \"center\", marginTop: \"50px\" }}>Upload a image</h1>\r\n\r\n      <Form.Item {...formItemLayout} name=\"Images\" label=\"Choose your images\">\r\n        <input\r\n          type=\"file\"\r\n          ref={filesToBeUploaded}\r\n          multiple\r\n          onChange={(e) => previewImage(e)}\r\n        ></input>\r\n      </Form.Item>\r\n\r\n      <Form.Item wrapperCol={{ span: 12, offset: 6 }}>\r\n        <Button type=\"primary\" htmlType=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form.Item>\r\n      {previewImages &&\r\n        Object.keys(previewImages).map((e) => (\r\n          <div>\r\n            <img\r\n              key={e}\r\n              style={{ width: \"150px\", height: \"100%\" }}\r\n              src={previewImages[e].data}\r\n            ></img>\r\n            <label>Price</label>\r\n            <input\r\n              onChange={(event) => {\r\n                event.persist();\r\n                setPreviewImages((old) => ({\r\n                  ...old,\r\n                  [e]: { ...previewImages[e], price: event.target.value },\r\n                }));\r\n              }}\r\n            ></input>\r\n            <label>Public</label>\r\n            <select\r\n              onChange={(event) => {\r\n                event.persist();\r\n                setPreviewImages((old) => ({\r\n                  ...old,\r\n                  [e]: { ...previewImages[e], public: event.target.value },\r\n                }));\r\n              }}\r\n            >\r\n              <option value=\"true\">True</option>\r\n              <option value=\"false\">False</option>\r\n            </select>\r\n            <label>Tags(comma seperated)</label>\r\n            <input\r\n              onChange={(event) => {\r\n                event.persist();\r\n                setPreviewImages((old) => ({\r\n                  ...old,\r\n                  [e]: { ...previewImages[e], tags: event.target.value },\r\n                }));\r\n              }}\r\n            ></input>\r\n          </div>\r\n        ))}\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default UploadImage;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Form from \"antd/es/form\";\r\nimport Input from \"antd/es/input\";\r\nimport Button from \"antd/es/button\";\r\nimport Checkbox from \"antd/es/checkbox\";\r\nimport Row from \"antd/es/row\";\r\nimport Col from \"antd/es/col\";\r\nimport UserOutlined from \"@ant-design/icons/UserOutlined\";\r\nimport LockOutlined from \"@ant-design/icons/LockOutlined\";\r\nimport { userContext } from \"./userContext.js\";\r\nfunction Login() {\r\n  const [username, setUsername] = useState();\r\n  const [password, setPassword] = useState();\r\n\r\n  const { login, loggedIn } = useContext(userContext);\r\n\r\n  if (loggedIn) {\r\n    return <Redirect to=\"/\"></Redirect>;\r\n  }\r\n  return (\r\n    <Row\r\n      type=\"flex\"\r\n      justify=\"center\"\r\n      align=\"middle\"\r\n      style={{ minHeight: \"100vh\" }}\r\n    >\r\n      <Col span={5}>\r\n        <h1>Login</h1>\r\n        <Form\r\n          name=\"normal_login\"\r\n          className=\"login-form\"\r\n          initialValues={{ remember: true }}\r\n          onFinish={(_) => login(username, password)}\r\n        >\r\n          <Form.Item\r\n            name=\"username\"\r\n            rules={[{ required: true, message: \"Please input your Username!\" }]}\r\n          >\r\n            <Input\r\n              onChange={(e) => setUsername(e.target.value)}\r\n              prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n              placeholder=\"Username\"\r\n            />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"password\"\r\n            rules={[{ required: true, message: \"Please input your Password!\" }]}\r\n          >\r\n            <Input\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n            />\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\r\n              <Checkbox>Remember me</Checkbox>\r\n            </Form.Item>\r\n\r\n            <a className=\"login-form-forgot\" href=\"\">\r\n              Forgot password\r\n            </a>\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              className=\"login-form-button\"\r\n            >\r\n              Log in\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Form from \"antd/es/form\";\r\nimport Input from \"antd/es/input\";\r\nimport Button from \"antd/es/button\";\r\nimport Checkbox from \"antd/es/checkbox\";\r\nimport Row from \"antd/es/row\";\r\nimport Col from \"antd/es/col\";\r\nimport UserOutlined from \"@ant-design/icons/UserOutlined\";\r\nimport LockOutlined from \"@ant-design/icons/LockOutlined\";\r\nimport { userContext } from \"./userContext.js\";\r\n\r\nfunction Register() {\r\n  const [username, setUsername] = useState();\r\n  const [password, setPassword] = useState();\r\n  const [loggedin, setLoggedIn] = useState();\r\n  const { login, loggedIn } = useContext(userContext);\r\n  function registerRequest(e) {\r\n    fetch(`${process.env.REACT_APP_URL}/register`, {\r\n      method: \"POST\",\r\n      credentials: \"include\",\r\n      body: JSON.stringify({ username: username, password: password }),\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.status === 200) {\r\n          return res.json();\r\n        }\r\n      })\r\n      .then((data) => {\r\n        login(data.username, null, true, data.money);\r\n        setLoggedIn(true);\r\n      })\r\n      .catch((_) => alert(\"issue registering\"));\r\n  }\r\n\r\n  if (loggedin || loggedIn) {\r\n    return <Redirect to=\"/\"></Redirect>;\r\n  }\r\n  return (\r\n    <Row\r\n      type=\"flex\"\r\n      justify=\"center\"\r\n      align=\"middle\"\r\n      style={{ minHeight: \"100vh\" }}\r\n    >\r\n      <Col span={5}>\r\n        <h1>Register</h1>\r\n        <Form\r\n          name=\"normal_login\"\r\n          className=\"login-form\"\r\n          initialValues={{ remember: true }}\r\n          onFinish={registerRequest}\r\n        >\r\n          <Form.Item\r\n            name=\"username\"\r\n            rules={[{ required: true, message: \"Please input your Username!\" }]}\r\n          >\r\n            <Input\r\n              onChange={(e) => setUsername(e.target.value)}\r\n              prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n              placeholder=\"Username\"\r\n            />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"password\"\r\n            rules={[{ required: true, message: \"Please input your Password!\" }]}\r\n          >\r\n            <Input\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n            />\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\r\n              <Checkbox>Remember me</Checkbox>\r\n            </Form.Item>\r\n\r\n            <a className=\"login-form-forgot\" href=\"\">\r\n              Forgot password\r\n            </a>\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              className=\"login-form-button\"\r\n            >\r\n              Log in\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport List from \"antd/es/list\";\r\nimport Avatar from \"antd/es/avatar\";\r\nimport Button from \"antd/es/button\";\r\nimport Row from \"antd/es/row\";\r\nimport Col from \"antd/es/col\";\r\nimport Modal from \"antd/es/modal\";\r\nimport Input from \"antd/es/input\";\r\nimport Select from \"antd/es/select\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { userContext } from \"./userContext\";\r\n\r\nconst { Option } = Select;\r\nfunction MyImages() {\r\n  const [images, setImages] = useState([]);\r\n  const { loggedIn } = useContext(userContext);\r\n  const [modalVisibility, setModalVisibility] = useState(false);\r\n  const [pictureBeingEdited, setPictureBeingEdited] = useState({});\r\n\r\n  useEffect(() => {\r\n    fetch(`${process.env.REACT_APP_URL}/userimages`, { credentials: \"include\" })\r\n      .then((res) => res.json())\r\n      .then((data) => setImages(data))\r\n      .catch((_) => alert(\"unable to fetch user specific images\"));\r\n  }, []);\r\n\r\n  function handleModalOk() {\r\n    setModalVisibility(false);\r\n    fetch(`${process.env.REACT_APP_URL}/editimg`, {\r\n      method: \"POST\",\r\n      credentials: \"include\",\r\n      body: JSON.stringify(pictureBeingEdited),\r\n    })\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          fetch(`${process.env.REACT_APP_URL}/userimages`, {\r\n            credentials: \"include\",\r\n          })\r\n            .then((res) => res.json())\r\n            .then((data) => setImages(data))\r\n            .catch((_) => alert(\"unable to fetch user specific images\"));\r\n        }\r\n      })\r\n      .catch((_) => alert(\"unable to edit image\"));\r\n    setPictureBeingEdited({});\r\n  }\r\n\r\n  function deleteImg(id) {\r\n    fetch(`${process.env.REACT_APP_URL}/deleteimg`, {\r\n      method: \"POST\",\r\n      credentials: \"include\",\r\n      body: JSON.stringify({ pictureID: id }),\r\n    }).then((res) => {\r\n      if (res.status === 200) {\r\n        setImages((old) => {\r\n          console.log(old);\r\n          const objCopy = [...images];\r\n          for (let i = 0; i < objCopy.length; i++) {\r\n            if (objCopy[i].pictureID === id) {\r\n              objCopy.splice(i, 1);\r\n            }\r\n          }\r\n          return objCopy;\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  function handleModalCancel() {\r\n    setModalVisibility(false);\r\n    setPictureBeingEdited({});\r\n  }\r\n\r\n  function handleModalOpen(picturedetails) {\r\n    setPictureBeingEdited(picturedetails);\r\n    setModalVisibility(true);\r\n  }\r\n\r\n  if (!loggedIn) {\r\n    return <Redirect to=\"/login\"></Redirect>;\r\n  }\r\n  return (\r\n    <Row>\r\n      <Col span={22} offset={1}>\r\n        <h1 style={{ textAlign: \"center\" }}>Your Images</h1>\r\n        <List\r\n          itemLayout=\"vertical\"\r\n          size=\"large\"\r\n          pagination={{\r\n            onChange: (page) => {\r\n              console.log(page);\r\n            },\r\n            pageSize: 5,\r\n          }}\r\n          dataSource={images}\r\n          renderItem={(item) => (\r\n            <List.Item\r\n              key={item.title}\r\n              actions={[]}\r\n              extra={\r\n                <img\r\n                  width={272}\r\n                  alt=\"logo\"\r\n                  src={`${process.env.REACT_APP_URL}/images/${item.path}`}\r\n                />\r\n              }\r\n            >\r\n              <List.Item.Meta\r\n                avatar={<Avatar src={item.avatar} />}\r\n                title={<a href={item.href}>{item.ownerUsername}</a>}\r\n                description={\"$\" + item.price}\r\n              />\r\n              {item.public ? (\r\n                <p>This item is listed on the marketplace</p>\r\n              ) : (\r\n                <p>This item is not listed on the marketplace</p>\r\n              )}\r\n              {\r\n                <Button\r\n                  onClick={(_) =>\r\n                    handleModalOpen({\r\n                      id: item.pictureID,\r\n                      price: item.price,\r\n                      public: item.public,\r\n                    })\r\n                  }\r\n                  type=\"primary\"\r\n                >\r\n                  EDIT\r\n                </Button>\r\n              }\r\n              {\r\n                <Button\r\n                  onClick={(_) => deleteImg(item.pictureID)}\r\n                  type=\"danger\"\r\n                >\r\n                  DELETE\r\n                </Button>\r\n              }\r\n            </List.Item>\r\n          )}\r\n        />\r\n\r\n        <Modal\r\n          title=\"Edit image details..\"\r\n          visible={modalVisibility}\r\n          onOk={handleModalOk}\r\n          onCancel={handleModalCancel}\r\n        >\r\n          <label>Price</label>\r\n          <Input\r\n            onChange={(e) =>\r\n              setPictureBeingEdited({\r\n                ...pictureBeingEdited,\r\n                price: e.target.value,\r\n              })\r\n            }\r\n            value={pictureBeingEdited.price}\r\n            placeholder=\"Basic usage\"\r\n          />\r\n          <label>Public</label>\r\n          <Select\r\n            key={pictureBeingEdited.public}\r\n            defaultValue={pictureBeingEdited.public == 1 ? \"true\" : \"false\"}\r\n            style={{ width: 120 }}\r\n            onChange={(e) =>\r\n              setPictureBeingEdited({\r\n                ...pictureBeingEdited,\r\n                public: e == \"true\" ? 1 : 0,\r\n              })\r\n            }\r\n          >\r\n            <Option value=\"true\">True</Option>\r\n            <Option value=\"false\">False</Option>\r\n          </Select>\r\n        </Modal>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default MyImages;\r\n","import React, { createContext, useState, useEffect, useContext } from \"react\";\nimport Nav from \"./Nav\";\nimport Home from \"./Home\";\nimport UploadImage from \"./UploadImage\";\nimport Login from \"./Login\";\nimport Register from \"./Register\";\nimport { BrowserRouter as Router, Switch, Route, Redirect} from \"react-router-dom\";\nimport \"./App.css\";\nimport MyImages from \"./MyImages\";\nimport {UserProvider} from \"./userContext\"\n\n\nfunction App() {\n\n  console.log(UserProvider);\n\n  return (\n    <UserProvider>\n      <Router>\n        <Nav />\n        <Switch>\n          <Route path=\"/\" exact>\n            <Home />\n          </Route>\n          <Route path=\"/upload\">\n            <UploadImage />\n          </Route>\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n          <Route path=\"/register\">\n            <Register />\n          </Route>\n          <Route path=\"/myimages\">\n            <MyImages />\n          </Route>\n        </Switch>\n      </Router>\n    </UserProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}